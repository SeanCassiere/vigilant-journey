import{defaultParseSearch as N,isRedirect as m,isNotFound as _}from"@tanstack/react-router";import{H3Event as g,getRequestURL as A,getRequestWebStream as F,eventHandler as H}from"h3";import{AsyncLocalStorage as I}from"node:async_hooks";var O="Invariant failed";function P(e,t){if(!e)throw new Error(O)}function j(e={}){let t,n=!1;const a=r=>{if(t&&t!==r)throw new Error("Context conflict")};let o;if(e.asyncContext){const r=e.AsyncLocalStorage||globalThis.AsyncLocalStorage;r?o=new r:console.warn("[unctx] `AsyncLocalStorage` is not provided.")}const l=()=>{if(o&&t===void 0){const r=o.getStore();if(r!==void 0)return r}return t};return{use:()=>{const r=l();if(r===void 0)throw new Error("Context is not available");return r},tryUse:()=>l(),set:(r,s)=>{s||a(r),t=r,n=!0},unset:()=>{t=void 0,n=!1},call:(r,s)=>{a(r),t=r;try{return o?o.run(r,s):s()}finally{n||(t=void 0)}},async callAsync(r,s){t=r;const f=()=>{t=r},d=()=>t===r?f:void 0;x.add(d);try{const u=o?o.run(r,s):s();return n||(t=void 0),await u}finally{x.delete(d)}}}}function U(e={}){const t={};return{get(n,a={}){return t[n]||(t[n]=j({...e,...a})),t[n],t[n]}}}const y=typeof globalThis<"u"?globalThis:typeof self<"u"?self:typeof global<"u"?global:typeof window<"u"?window:{},S="__unctx__",W=y[S]||(y[S]=U()),q=(e,t={})=>W.get(e,t),b="__unctx_async_handlers__",x=y[b]||(y[b]=new Set);function J(e){let t;const n=E(e),a={duplex:"half",method:e.method,headers:e.headers};return e.node.req.body instanceof ArrayBuffer?new Request(n,{...a,body:e.node.req.body}):new Request(n,{...a,get body(){return t||(t=K(e),t)}})}function M(e){return e.web??={request:J(e),url:E(e)},e.web.request}function $(){return z()}const T=Symbol("$HTTPEvent");function D(e){return typeof e=="object"&&(e instanceof g||e?.[T]instanceof g||e?.__is_event__===!0)}function C(e){return function(...t){let n=t[0];if(D(n))t[0]=n instanceof g||n.__is_event__?n:n[T];else{if(!globalThis.app.config.server.experimental?.asyncContext)throw new Error("AsyncLocalStorage was not enabled. Use the `server.experimental.asyncContext: true` option in your app configuration to enable it. Or, pass the instance of HTTPEvent that you have as the first argument to the function.");if(n=$(),!n)throw new Error("No HTTPEvent found in AsyncLocalStorage. Make sure you are using the function within the server runtime.");t.unshift(n)}return e(...t)}}const E=C(A),K=C(F);function B(){return q("nitro-app",{asyncContext:!!globalThis.app.config.server.experimental?.asyncContext,AsyncLocalStorage:I})}function z(){return B().use().event}function G(e){return globalThis.MANIFEST[e]}const v="server-fn-return-type",h="server-fn-payload-type",ee=H(Q);async function Q(e){return V(M(e))}async function V(e,t){var n,a;const o=e.method,l=new URL(e.url,"http://localhost:3000"),r=Object.fromEntries(new URLSearchParams(l.search).entries()),s=r._serverFnId,f=r._serverFnName;if(!s||!f)throw new Error("Invalid request");P(typeof s=="string");const d=(a=await((n=G("server").chunks[s])==null?void 0:n.import()))==null?void 0:a[f],u=await(async()=>{try{const i=await(async()=>{var w;return e.headers.get(h)==="payload"?[o.toLowerCase()==="get"?(()=>{var p;return(p=N(l.search))==null?void 0:p.payload})():await e.json(),{method:o,request:e}]:e.headers.get(h)==="formData"||(w=e.headers.get("Content-Type"))!=null&&w.includes("multipart/form-data")?[o.toLowerCase()==="get"?(()=>{const{_serverFnId:p,_serverFnName:X,payload:L}=r;return L})():await e.formData(),{method:o,request:e}]:e.headers.get(h)==="request"?[e,{method:o,request:e}]:await e.json()})(),c=await d(...i);return c instanceof Response?c:m(c)||_(c)?R(c):new Response(c!==void 0?JSON.stringify(c):void 0,{status:200,headers:{"Content-Type":"application/json",[v]:"json"}})}catch(i){return i instanceof Response?i:m(i)||_(i)?R(i):(console.error("Server Fn Error!"),console.error(i),console.info(),new Response(JSON.stringify(i),{status:500,headers:{"Content-Type":"application/json",[v]:"error"}}))}})();if(u.status===200&&u.headers.get("Content-Type")==="application/json"){const c=await u.clone().text();c&&JSON.stringify(JSON.parse(c))}return u}function R(e){const{headers:t,...n}=e;return new Response(JSON.stringify(n),{status:200,headers:{"Content-Type":"application/json",[v]:"json",...e.headers||{}}})}export{ee as default};
